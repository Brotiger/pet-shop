/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/singl/product.js":
/*!***************************************!*\
  !*** ./resources/js/singl/product.js ***!
  \***************************************/
/***/ (() => {

eval("var imgCount = 0;\nvar charCount = 0;\n$(\"#addPhoto\").on(\"click\", function () {\n  $(\"#photoList\").append(\"<div class=\\\"form-group\\\" block imgBlock id=\\\"imgBlock-\".concat(imgCount, \"\\\">\") + \"<div class=\\\"input-group\\\">\" + \"<div class=\\\"input-group-prepend\\\">\" + \"<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" delete-block>\" + \"<i class=\\\"fas fa-trash\\\"></i>\" + \"</button>\" + \"</div>\" + \"<div class=\\\"custom-file\\\">\" + \"<input type=\\\"file\\\" name=\\\"img-\".concat(imgCount, \"\\\" class=\\\"custom-file-input\\\" id=\\\"inputFile-\").concat(imgCount, \"\\\">\") + \"<label class=\\\"custom-file-label\\\" for=\\\"inputFile-\".concat(imgCount, \"\\\">\\u0412\\u044B\\u0431\\u0438\\u0440\\u0435\\u0442\\u0435 \\u0444\\u0430\\u0439\\u043B</label>\") + \"</div>\" + \"</div>\" + \"<span class=\\\"text-danger\\\" error-message id=\\\"error-img-\".concat(imgCount, \"\\\" style=\\\"display: none\\\"></span>\") + \"</div>\");\n  imgCount++;\n  bsCustomFileInput.init();\n});\n$(\"#addChar\").on(\"click\", function () {\n  $(\"#charList\").append(\"<div class=\\\"form-group\\\" block charBlock id=\\\"charBlock-\".concat(charCount, \"\\\">\") + \"<div class=\\\"input-group\\\">\" + \"<div class=\\\"input-group-prepend\\\">\" + \"<button type=\\\"button\\\" class=\\\"btn btn-danger\\\" delete-block>\" + \"<i class=\\\"fas fa-trash\\\"></i>\" + \"</button>\" + \"</div>\" + \"<input type=\\\"text\\\" name=\\\"char-key-\".concat(charCount, \"\\\" class=\\\"form-control\\\" placeholder=\\\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\\\" key>\") + \"<input type=\\\"text\\\" name=\\\"char-value-\".concat(charCount, \"\\\" class=\\\"form-control\\\" placeholder=\\\"\\u0417\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435\\\" val>\") + \"</div>\" + \"<span class=\\\"text-danger\\\" error-message id=\\\"error-char-\".concat(charCount, \"\\\" style=\\\"display: none\\\"></span>\") + \"</div>\");\n  charCount++;\n  bsCustomFileInput.init();\n});\n$('#addForm, #editForm').submit(function () {\n  var form = $(this);\n  var formData = new FormData();\n  var img = [];\n  var _char = []; //Начадл добавления данных о фото\n\n  $(\"[imgBlock]\").each(function (i, ell) {\n    img.push({\n      \"id\": ell.id.replace(\"imgBlock-\", \"\")\n    });\n    formData.append(\"img-\" + ell.id.replace(\"imgBlock-\", \"\"), $(this).find(\"[type='file']\")[0].files[0]);\n  });\n  formData.append(\"imgs\", JSON.stringify(img)); //Начадл добавления данных о характеристиках\n\n  $(\"[charBlock]\").each(function (i, ell) {\n    _char.push({\n      \"name\": $(this).find(\"[key]\").val(),\n      \"value\": $(this).find(\"[val]\").val(),\n      \"id\": ell.id.replace(\"charBlock-\", \"\")\n    });\n  });\n  formData.append(\"chars\", JSON.stringify(_char));\n  $('[data-field]').each(function (i, ell) {\n    formData.append(ell.name, $(this).val());\n  });\n  $.ajax({\n    type: $(this).attr('method'),\n    url: $(this).attr('action'),\n    data: formData,\n    cache: false,\n    contentType: false,\n    processData: false,\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    success: function success(data) {\n      $(\"[error-message]\").hide();\n\n      if (data.action == 'reset') {\n        form[0].reset();\n        resetForm();\n      }\n\n      if (data.data.message) {\n        toastr.success(data.data.message);\n      }\n    },\n    error: function error(data) {\n      $('[error-message]').attr('error-message', 'false');\n      var response = data.responseJSON;\n\n      for (key in response.errors) {\n        $(\"#error-\".concat(key)).show().text(response.errors[key]);\n        $(\"#error-\".concat(key)).attr('error-message', 'true');\n      }\n\n      ;\n      $(\"[error-message=false]\").hide();\n\n      if (data.responseJSON.message) {\n        toastr.error(data.responseJSON.message);\n      }\n    }\n  });\n  return false;\n});\n\nfunction resetForm() {\n  $(\"[form-field]\").each(function () {\n    $(this).removeClass(\"errorField\");\n    $(this).val(\"\");\n  });\n  $(\"[imgBlock]\").remove();\n  $(\"[charBlock]\").remove();\n  imgCount = 0;\n  charCount = 0;\n}\n\n$('body').delegate('#btn-modal-search', 'click', function () {\n  console.log('asd');\n  $('#modal-search').modal();\n});\n$('body').delegate('#btn-clear-search', 'click', function () {\n  $('#searchForm')[0].reset();\n});\n$('#searchForm').submit(function () {\n  $('#modal-search').modal('hide');\n  $.ajax({\n    type: $(this).attr('method'),\n    url: $(this).attr('action'),\n    data: $(this).serialize(),\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    success: function success(data) {\n      $(\"[error-message]\").hide();\n      $('#category').html(data.data.html.category);\n    },\n    error: function error(data) {\n      if (data.responseJSON.message) {\n        toastr.error(data.responseJSON.message);\n      }\n    }\n  });\n  return false;\n});\n$('body').delegate('#btn-modal-reset', 'click', function () {\n  $.ajax({\n    type: $(this).attr('method'),\n    url: $(this).attr('action'),\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    success: function success(data) {\n      $(\"[error-message]\").hide();\n      $('#category').html(data.data.html.category);\n    },\n    error: function error(data) {\n      if (data.responseJSON.message) {\n        toastr.error(data.responseJSON.message);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/singl/product.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/singl/product.js"]();
/******/ 	
/******/ })()
;